@using Nop.Plugin.Misc.HANSAmedProductRibbon.Areas.Admin.Models
@model ProductRibbonListModel

@{
    Layout = "_ConfigurePlugin";
}

<div class="panel-group">
    <div class="panel panel-default">
        <div class="panel-body">
            @await Html.PartialAsync("Table", new DataTablesModel
            {
            Name = "product-ribbon-grid",
            UrlRead = new DataUrl("ProductRibbonList", "ProductRibbons", null),
            UrlDelete = new DataUrl("Delete", "ProductRibbons", null),
            Length = Model.ProductPictureSearchModel.PageSize,
            LengthMenu = Model.ProductPictureSearchModel.AvailablePageSizes,
            ColumnCollection = new List<ColumnProperty>
            {
                new ColumnProperty(nameof(ProductRibbonModel.Enabled))
            {
                Title = "Preview Picture",
                Width = "100",
                Render = new RenderPicture()
            },
            new ColumnProperty(nameof(ProductRibbonModel.Name))
            {
                Title = "Picture Width",
                Width = "100"
            },
            new ColumnProperty(nameof(ProductRibbonModel.StopAddingRibbonsAftherThisOneIsAdded))
            {
                Title ="Picture Height",
                Width = "100"
            },

            new ColumnProperty(nameof(ProductRibbonModel.Priority))
            {
                Title ="Picture Height",
                Width = "100"
            },

            new ColumnProperty(nameof(ProductRibbonModel.FromDate))
            {
                Title ="Picture Height",
                Width = "100"
            },

            new ColumnProperty(nameof(ProductRibbonModel.ToDate))
            {
                Title ="Picture Height",
                Width = "100"
            },

            new ColumnProperty(nameof(ProductRibbonModel.LimitedToStores))
            {
                Title ="Picture Height",
                Width = "100"
            },


            new ColumnProperty(nameof(ProductRibbonModel.Id))
            {
                Title = T("Admin.Common.Delete").Text,
                ClassName = NopColumnClassDefaults.Button,
                Render = new RenderButtonRemove(T("Admin.Common.Delete").Text),
                Width = "100"
            }
                }
            })
        </div>
        <div class="panel-footer">
            @*<input type="submit" id="btnAddNewOption" class="btn btn-primary" value="@T("Plugins.Pickup.PickupInStore.AddNew")" onclick="javascript:OpenWindow('@(Url.Action("Create", "PickupInStore",  new { btnId = "btnRefresh", formId = "product-ribbon-form" }))', 800, 800, true); return false;" />*@
            <input type="submit" id="btnRefresh" class="btn btn-default" style="display: none" />
        </div>
        <script>
            $(document).ready(function () {
                $('#btnRefresh').click(function () {
                    //refresh grid
                    updateTable('#product-ribbon-grid');

                    //return false to don't reload a page
                    return false;
                });
            });
        </script>
    </div>
</div>

